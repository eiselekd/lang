// The parsing and formatting of TeX blocks.
//
// The capabilities are fairly limited and mostly geared to be able to
// parse bibtex entries. Accent and special character commands are quite well
// recognized in order to allow author names with correct accent characters.
module interface texParser
/* This module defines standard operations that are always available.

   Some types and operations are required to be defined for the compiler
   to work correctly (i.e. types like ":int" or ":list")
*/
import std/core = std/core = "";
/* This module implements string dictionaries.
*/
import std/dict = std/dict = "";
/* This module implements extended string operations and a string builder.
*/
import std/string = std/string = "";
/* This module supports JavaScriptStyle regular expressions.

   The regular expressions conform to the regular expressions of JavaScript
   as described at <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions>
*/
import std/regex = std/regex = "";
/*
Basic cryptography. 
*/
import std/crypto = std/crypto = "";
/*
Handle and transform file paths 
*/
import std/path = std/path = "";
// Common types and operations
import common = common = "";
// Parsing and formatting of html entities (for TeX output)
import entity = entity = "";
import texCommon = texCommon = "";
// The parsing and formatting of TeX blocks.
//
// The capabilities are fairly limited and mostly geared to be able to
// parse bibtex entries. Accent and special character commands are quite well
// recognized in order to allow author names with correct accent characters.
import texParserBase = texParserBase = "";
// The parsing and formatting of TeX blocks.
//
// The capabilities are fairly limited and mostly geared to be able to
// parse bibtex entries. Accent and special character commands are quite well
// recognized in order to allow author names with correct accent characters.
import texParserItems = texParserItems = "";
/* ignore the following commands and environments in bibliographies*/
/* ignore the following commands alwyas (and keep last argument) */
/* keep these commands as is.. */
/* Use TexRaw for the following commands */
/* main grammar */
// Parse TeX elements and return Markdown
fun parseTex : (txt : std/core/string, id : ?std/core/string, citestyle : ?common/citestyle, bststyle : ?std/core/string, verbose : ?std/core/bool, ignore : ?std/core/bool) -> std/core/string;